function S42RawDataListExportOptimized = Import_CompositeSpectrum(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   S42RAWDATALISTEXPORTOPTIMIZED = IMPORTFILE(FILENAME) Reads data from
%   text file FILENAME for the default selection.
%
%   S42RAWDATALISTEXPORTOPTIMIZED = IMPORTFILE(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   S42RawDataListExportOptimized =
%   importfile('S42_RawDataListExportOptimized.csv', 6, 18813);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/07/01 10:04:12

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 6;
    endRow = inf;
end

%% Format string for each line of text:
%   column54: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%q%[^\n\r]';


%% Open the text file.
fileID = fopen(filename,'r');

% read headers and check whether "Compound Name" column is there
dataArray = textscan(fileID, formatSpec, 1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-2, 'ReturnOnError', false);
for i=1:length(dataArray)
    dataArray(i) = dataArray{i};
end
%% Close the text file.
fclose(fileID);
% if "Compound Name" column is there, formatspec has one more %*s
if ismember({'Compound Name'}, dataArray)
    formatSpec = '%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%q%[^\n\r]';
else
    formatSpec = '%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%q%[^\n\r]';
end
    
%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    dataArray{1} = [dataArray{1};dataArrayBlock{1}];
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
S42RawDataListExportOptimized = [dataArray{1:end-1}];
